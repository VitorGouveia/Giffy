var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __markAsModule=target=>__defProp(target,"__esModule",{value:true});var __esm=(fn,res)=>function __init(){return fn&&(res=(0,fn[__getOwnPropNames(fn)[0]])(fn=0)),res};var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var __reExport=(target,module2,copyDefault,desc)=>{if(module2&&typeof module2==="object"||typeof module2==="function"){for(let key of __getOwnPropNames(module2))if(!__hasOwnProp.call(target,key)&&(copyDefault||key!=="default"))__defProp(target,key,{get:()=>module2[key],enumerable:!(desc=__getOwnPropDesc(module2,key))||desc.enumerable})}return target};var __toESM=(module2,isNodeMode)=>{return __reExport(__markAsModule(__defProp(module2!=null?__create(__getProtoOf(module2)):{},"default",!isNodeMode&&module2&&module2.__esModule?{get:()=>module2.default,enumerable:true}:{value:module2,enumerable:true})),module2)};var __async=(__this,__arguments,generator)=>{return new Promise((resolve,reject)=>{var fulfilled=value=>{try{step(generator.next(value))}catch(e){reject(e)}};var rejected=value=>{try{step(generator.throw(value))}catch(e){reject(e)}};var step=x=>x.done?resolve(x.value):Promise.resolve(x.value).then(fulfilled,rejected);step((generator=generator.apply(__this,__arguments)).next())})};var app_exports={};__export(app_exports,{App:()=>App});var import_electron,import_path,App;var init_app=__esm({"electron/app/index.ts"(){import_electron=require("electron");import_path=__toESM(require("path"));App=()=>{const __isDev__=process.env.NODE_ENV==="development";const window=new import_electron.BrowserWindow({width:1200,height:700});const client="http://localhost:8000";if(__isDev__){window.loadURL(client)}else{window.loadFile(import_path.default.resolve(__dirname,"..","index.html"))}console.log("app")}}});var import_electron2=require("electron");import_electron2.app.on("ready",()=>__async(exports,null,function*(){const{App:App2}=yield Promise.resolve().then(()=>(init_app(),app_exports));console.log("start app");App2()}));
